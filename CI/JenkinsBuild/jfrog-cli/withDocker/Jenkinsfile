jfrog_cli_path="/usr/local/bin"

pipeline {
    
    agent none
    
    environment {
        JFROG_CLI_HOME="/opt/jfrog"
        ARTY_URL='http://192.168.41.41:8081/artifactory'
        ARTY_CREDS=credentials('art_apikey')
        ARTY_MAIN_REPO="asgardian-pypi"
        MODULE_NAME="python-example"
        ARTY_ID="art"
        TARGET_FOLDER="release"
        REPOSITORY_TYPE="pypi"
        PROJECT_NAME="asgardian"
        DRY_RUN="false"
    }

    parameters {
        booleanParam(name: 'scan_build', defaultValue: false, description: 'Xray scan')
        string(name: 'agent', defaultValue: 'linux', description: 'Jenkins agent name')
    }
    
    stages {
        
        stage("Config env") {
           agent { label params.agent }
           steps {
                git credentialsId: 'cyan21', branch: 'master', url: 'https://github.com/cyan21/python-greetings.git'
                
                sh "cp CI/JenkinsBuild/withDocker/Dockerfile . " 
           }
        }

        stage("Build package") {
           agent { label params.agent dockerfile {
                   additionalBuildArgs  "--build-arg ARTY_URL=${env.ARTY_URL} --build-arg ARTY_USER=${ARTY_CREDS_USR} --build-arg ARTY_APIKEY=${ARTY_CREDS_PSW} --build-arg ARTY_ID=${env.ARTY_ID}" 
               }
           }
           steps {
                sh '''
                    pip -V
                    jfrog --version
                    sed -i "s/2.3.0/2.12.4/" requirements.txt
                    echo $JFROG_CLI_HOME 
                    conda info
                    scripts/init.sh -r $ARTY_MAIN_REPO -s $ARTY_ID
                    scripts/build.sh -i $JOB_NAME -n $BUILD_NUMBER -t release -r $ARTY_MAIN_REPO -a $ARTY_ID -m $MODULE_NAME -s $ARTY_URL 
                '''

            }
        }

        stage ('Xray scan') {
           when { 
               expression { return params.scan_build } 
           }
           agent { label "jfrog_cli" }
           steps {
               sh "jfrog rt bs --url=${ARTY_URL} --user=${ARTY_CREDS_USR} --apikey=${ARTY_CREDS_PSW} --fail=false $JOB_NAME $BUILD_ID"
           }

       }
        
        stage('Promote Build Info') {
            agent { label "jfrog_cli" }
            steps {
                withEnv(["PATH+EXTRA=${jfrog_cli_path}"]) {  
                    sh "jfrog rt bpr --url=${ARTY_URL} --user=${ARTY_CREDS_USR} --apikey=${ARTY_CREDS_PSW} --status='Release' --comment='passed non regression tests' $JOB_NAME $BUILD_ID ${PROJECT_NAME}-${REPOSITORY_TYPE}-uat-local"
                }
            }    
        }

    } // end stages
}       
